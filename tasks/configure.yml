---
- name: rspamd password generation
  block:
    - name: configure rspamd password
      become: true
      ansible.builtin.template:
        src: templates/worker-controller.inc.j2
        dest: "{{ rspamd__config_path }}worker-controller.inc"
        mode: '0640'
        owner: "{{ rspamd__default_owner }}"
        group: "{{ rspamd__default_group }}"
      notify: systemctl restart rspamd
  rescue:
    - name: you have to install passlib
      ansible.builtin.fail:
        msg: 'I caught an error. Maybe you have to install passlib via pip3'

- name: Einstellung des logging
  become: true
  ansible.builtin.copy:
    src: files/logging.inc
    dest: "{{ rspamd__config_path }}logging.inc"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: milter_headers.conf
  become: true
  ansible.builtin.copy:
    src: files/milter_headers.conf
    dest: "{{ rspamd__config_path }}milter_headers.conf"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: milter_headers.conf
  become: true
  ansible.builtin.copy:
    src: files/classifier-bayes.conf
    dest: "{{ rspamd__config_path }}classifier-bayes.conf"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: Einstellug der redis.conf
  become: true
  ansible.builtin.template:
    src: templates/redis.conf.j2
    dest: "{{ rspamd__config_path }}redis.conf"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: classifier-bayes.conf
  become: true
  ansible.builtin.copy:
    src: files/classifier-bayes.conf
    dest: "{{ rspamd__config_path }}classifier-bayes.conf"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: Einstellug der eignene black/whitelist
  become: true
  ansible.builtin.copy:
    src: "{{ rspamd__multimap_conf_file }}"
    dest: "{{ rspamd__config_path }}multimap.conf"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: multimap whitelist_ip.map
  become: true
  ansible.builtin.copy:
    src: "{{ rspamd__whitelist_ip_file }}"
    dest: "{{ rspamd__config_path }}whitelist_ip.map"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: multimap whitelist_from.map
  become: true
  ansible.builtin.copy:
    src: "{{ rspamd__whitelist_from_file }}"
    dest: "{{ rspamd__config_path }}whitelist_from.map"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: multimap blacklist_ip.map
  become: true
  ansible.builtin.copy:
    src: "{{ rspamd__blacklist_ip_file }}"
    dest: "{{ rspamd__config_path }}blacklist_ip.map"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd

- name: multimap blacklist_from.map
  become: true
  ansible.builtin.copy:
    src: "{{ rspamd__blacklist_from_file }}"
    dest: "{{ rspamd__config_path }}blacklist_from.map"
    owner: "{{ rspamd__default_owner }}"
    group: "{{ rspamd__default_group }}"
    mode: '0640'
  notify: systemctl restart rspamd
